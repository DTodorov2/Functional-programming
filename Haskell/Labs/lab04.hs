-- Напишете функция, която по подаден списък, връща всички подмножества от елементите на списъка.
subsets :: (Integral a) => [a] -> [[a]]
subsets [] = [[]]
subsets (x:xs) = map (x:) (subsets xs) ++ subsets xs

-- >>> subsets [1,2,3]
-- [[1,2,3],[1,2],[1,3],[1],[2,3],[2],[3],[]]

-- Напишете функция, която по подадено число n генерира безкраен списък от всички числа, 
-- получени от n след прилагане на операциите от хипотезата на Collatz. 
-- При достигане на 1 нека всички следващи числа в редицата да са също 1.

hailstone :: Int -> [Int]
hailstone n 
    | n == 1    = n: hailstone 1
    | even n    = n: hailstone (n `div` 2)
    | odd n     = n: hailstone (n * 3 + 1)

-- >>> take 15 (hailstone 6)
-- [6,3,10,5,16,8,4,2,1,1,1,1,1,1,1]

-- Напишете функция, която генерира безкраен списък от всички Питагорови тройки.
pythagoreanTriples :: [(Int,Int,Int)]
pythagoreanTriples = [(x,y,z) | z <- [1 ..], y <- [1 .. z], x <- [1 .. y], x*x + y*y == z*z]

-- >>> take 6 pythagoreanTriples
-- [(3,4,5),(6,8,10),(5,12,13),(9,12,15),(8,15,17),(12,16,20)]

-- Напишете функция, която по дадени 2 различни естествени числа k и l, генерира безкраен списък от 
-- всички числа от вида x^k * y^l, без повторения и подредени в нарастващ ред.
generateExponents :: Int -> Int -> [Int]
generateExponents k l = [n | n <- [1 ..], x <- [1 .. n], y <- [1 .. n], x^k * y^l == n]
-- >>> take 7 (generateExponents 2 3)
-- [1,4,8,9,16,25,27]

-- Напишете функция, която по подадени 2 цели числа k и s, генерира списък от всички списъци с дължина k, които имат сума на елементите s.
generateSumLists :: Int -> Int -> [[Int]]
generateSumLists k s = [(x:xs) | x <- [0 .. s], xs <- generateSumLists (k - 1) (s - x)]

-- Напишете функция, която по подаден списък, генерира всички пермутации на елементите на списъка.
permutations :: [Int] -> [[Int]]
permutations [] = [[]]
permutations xs = [(y:ys) | y <- xs, ys <- permutations (filter (/= y) xs)]
 
-- >>> permutations [1,2,3]
-- [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

-- Напишете функция, която генерира безкраен поток от редицата от цели положителни числа, дефинирана чрез следната формула: 
-- an = min { x | ∄k (1 ≤ k ≤ n/2) и (an-2k, an-k, x e аритметична прогресия)}.
